plugins {
    id 'java'
    id 'idea'

    // needed for publishing the lib to maven/jCenter
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.7.3"

    // helps me keep up to date with dependencies
    id "com.github.ben-manes.versions" version "0.13.0"

    // some of the dependencies are constricted to their own packages; if you don't use classes in these packages,
    // the dependencies becomes entirely optional
    id 'nebula.optional-base' version '3.1.0'
}

repositories {
    jcenter()
}

dependencies {
    // used for various utility methods
    compile 'com.google.guava:guava:20.0'

    // used for caching
    compile 'com.github.ben-manes.caffeine:caffeine:2.3.5'
    compile 'org.cache2k:cache2k-api:0.28-BETA'
    compile 'org.cache2k:cache2k-core:0.28-BETA'

    // used for String formatting
    compile 'org.slf4j:slf4j-api:1.7.21'

    // used for OkHttp package only
    compile 'com.squareup.okhttp3:okhttp:3.4.2', optional

    // needed for jackson package only
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.5', optional
    compile 'com.fasterxml.jackson.core:jackson-core:2.8.5', optional
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5', optional

    // needed for jooq package only
    compile 'org.jooq:jooq:3.8.6', optional

    // needed for spring.mockmvc package only
    compile 'org.springframework:spring-test:4.3.4.RELEASE', optional
    compile 'org.springframework:spring-web:4.3.4.RELEASE', optional
    compile 'org.springframework:spring-beans:4.3.4.RELEASE', optional
    compile 'javax.servlet:javax.servlet-api:4.0.0-b01', optional

    // needed for spring.gmail package only
    compile 'org.springframework:spring-context-support:4.3.4.RELEASE', optional
    compile 'javax.mail:javax.mail-api:1.5.6', optional

    // unit tests
    testCompile 'junit:junit:4.12'
    // better assertions
    testCompile 'org.assertj:assertj-core:3.6.0'
    // mocking various objects
    testCompile 'org.mockito:mockito-all:2.0.2-beta'
    // a little bit of reflection
    testCompile 'org.jooq:joor:0.9.6'
}

group 'eu.goodlike'
version '0.0.38'
def versionDescription = 'Added utility methods to handle HttpUrl path parts'

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    options.encoding = 'UTF-8'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

publishing {
    publications {
        GoodlikeUtils(MavenPublication) {
            groupId project.group
            artifactId rootProject.name
            //noinspection GroovyAssignabilityCheck
            version project.version

            from components.java
            //noinspection GroovyAssignabilityCheck
            artifact sourceJar

            pom.withXml {
                asNode().dependencies.dependency.findAll {
                    configurations.compile.allDependencies.find {dep -> dep.name == it.artifactId.text()} &&
                            it.scope.text() == 'runtime'
                }.each {
                    it.scope*.value = 'compile'
                }
            }
        }
    }
}

bintray {
    user = project.property('bintray_user')
    key = project.property('bintray_api_key')
    publications = ['GoodlikeUtils']
    pkg {
        repo = 'maven'
        name = rootProject.name
        userOrg = project.property('bintray_user')
        licenses = ['Unlicense']
        vcsUrl = 'https://github.com/TheGoodlike13/goodlike-utils'
        //noinspection GroovyAssignabilityCheck
        version {
            name = project.version
            desc = versionDescription
            released  = new Date()
            vcsTag = project.version
            // attributes = []
        }
    }
}
